{"version":3,"file":"static/js/382.ae27aa38.chunk.js","mappings":"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","sources":["webpack://your-pet-front/./src/UI/Button/AddButton/AddButton.module.css?053f","UI/Button/AddButton/AddButton.jsx","webpack://your-pet-front/./src/modules/shared/styles/PersonalPage/Personal.module.scss?f570","webpack://your-pet-front/./src/components/Personal/personal.module.scss?c4b3","components/Personal/Form.jsx","modules/helpers/regexp.js","components/Personal/PersonalCard.jsx","components/Personal/PetsCards.jsx","pages/Profile.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"addBtnBig\":\"AddButton_addBtnBig__clY2h\",\"icon\":\"AddButton_icon__oJDYR\",\"addBtn\":\"AddButton_addBtn__wnzWo\"};","import sprite from '../../../images/icons.svg';\nimport { useMedia } from 'react-use';\nimport { screen } from 'Utils/screen';\nimport styles from './AddButton.module.css';\n\nconst AddButton = ({ clickFunc }) => {\n  const isMobile = useMedia(screen.breakpoints.mobile.media);\n  return (\n    <>\n      {isMobile ? (\n        <button onClick={clickFunc} className={styles.addBtn}>\n          <svg className={styles.icon}>\n            <use href={sprite + '#icon-plus'} />\n          </svg>\n          Add pet\n        </button>\n      ) : (\n        <button onClick={clickFunc} className={styles.addBtnBig}>\n          Add pet\n          <svg className={styles.icon}>\n            <use href={sprite + '#icon-plus-small'} />\n          </svg>\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default AddButton;\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"personal_card__3TaEu\",\"personalPhoto\":\"personal_personalPhoto__P0M2T\",\"personalPhotoEdit\":\"personal_personalPhotoEdit__vqjxr\",\"petsCard\":\"personal_petsCard__j8aaN\",\"button\":\"personal_button__gyJOj\",\"label\":\"personal_label__+ge64\",\"form\":\"personal_form__sTr5X\",\"input\":\"personal_input__cdkc9\",\"logout\":\"personal_logout__jImMl\",\"logoutImg\":\"personal_logoutImg__d8PQT\",\"logoutblock\":\"personal_logoutblock__n4XFV\",\"editPhoto\":\"personal_editPhoto__OlqXq\",\"editPhotoBlock\":\"personal_editPhotoBlock__z4099\",\"confirmPhoto\":\"personal_confirmPhoto__TwSml\",\"costil\":\"personal_costil__xbvSV\",\"confirmPhoto2\":\"personal_confirmPhoto2__frrhC\",\"fileField\":\"personal_fileField__nj4LA\",\"editPhotoLabel\":\"personal_editPhotoLabel__FFUKe\",\"inputLabelRoot\":\"personal_inputLabelRoot__RvhcY\",\"userFields\":\"personal_userFields__IA61n\",\"notActiveBtn\":\"personal_notActiveBtn__GykX4\",\"myPets\":\"personal_myPets__oZJyg\",\"petsDelBtn\":\"personal_petsDelBtn__do4HA\",\"petsDelBtnSVG\":\"personal_petsDelBtnSVG__HqmqR\",\"petsCardList\":\"personal_petsCardList__VX2f2\",\"petsListItem\":\"personal_petsListItem__uKcxc\",\"petsContainer\":\"personal_petsContainer__F5flT\",\"petsInfoBlock\":\"personal_petsInfoBlock__hFBBj\",\"petsInfo\":\"personal_petsInfo__TkUZ5\",\"petsImg\":\"personal_petsImg__d9MJx\",\"spyIMG\":\"personal_spyIMG__fx74J\"};","import { Formik, Field, Form } from 'formik';\nimport scss from './personal.module.scss';\nimport defualtPhoto from '../../images/icons.svg';\nimport * as Yup from 'yup';\nimport { selectUser } from 'redux/auth/authSelectors';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { useDispatch } from 'react-redux';\nimport { userUpdate } from 'redux/user/userOperations';\nimport { refreshUser } from 'redux/auth/authOperations';\nimport TextField from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\nimport * as reg from 'modules/helpers/regexp';\nimport clsx from 'clsx';\n\nconst CssTextField = styled(TextField)(() => ({\n  '& .MuiOutlinedInput-notchedOutline': {\n    borderRadius: '20px',\n    borderColor: '#54adff',\n  },\n  '& .MuiInputBase-input': {\n    padding: '4px 12px',\n    fontSize: 16,\n  },\n  '& .MuiInputLabel-root': {\n    top: '-15px',\n  },\n  '& .MuiInputLabel-root.Mui-focused': {\n    top: '0px',\n  },\n}));\n\nconst validationSchema = Yup.object().shape({\n  photo: Yup.mixed().required('Please upload a photo'),\n  firstName: Yup.string()\n    .min(2, 'Requered min one letter')\n    .required('Requered'),\n  email: Yup.string()\n    .required('Requered')\n    .matches(reg.emailRegexp, 'Not valid'),\n  birthday: Yup.string()\n    .required('Requered')\n    .matches(reg.birthdayRegexp, 'Not valid'),\n  phone: Yup.string().optional().matches(reg.PhoneReg, 'Not valid'),\n  city: Yup.string().optional().matches(reg.cityRegexp, 'Not valid'),\n});\n\nexport const PersonalForm = ({ mode, handleEdit }) => {\n  const user = useSelector(selectUser);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    try {\n      // Simulate an API call to update the user's data\n      await dispatch(userUpdate(values));\n      await dispatch(refreshUser());\n      handleEdit();\n    } catch (error) {\n      // Handle error here\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  return (\n    <Formik\n      // enctype=\"multipart/form-data\"\n      // method=\"patch\"\n      initialValues={{\n        photo: user?.user.avatarURL || '123',\n        firstName: user?.user.name || '',\n        email: user?.user.email || '',\n        birthday: user?.user.birthday || '',\n        phone: user?.user.phone || '',\n        city: user?.user.city || '',\n        confirm: false,\n      }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({\n        values,\n        handleChange,\n        setFieldValue,\n        formikProps,\n        handleReset,\n        setFieldTouched,\n      }) => (\n        <Form className={scss.form}>\n          <div id=\"photo\">\n            <button\n              type=\"reset\"\n              onClick={() => {\n                handleEdit();\n              }}\n            >\n              <svg className={scss.personalPhotoEdit}>\n                <use\n                  href={`${defualtPhoto}#icon-${\n                    !mode ? 'edit' : 'cross-small'\n                  }`}\n                ></use>\n              </svg>\n            </button>\n          </div>\n          <div\n            className={clsx(\n              typeof values.photo === 'string' ? scss.costil : ''\n            )}\n          >\n            <label className={scss.editPhotoBlock}>\n              <div>\n                <img\n                  src={\n                    typeof values.photo === 'object'\n                      ? URL.createObjectURL(values.photo)\n                      : values.photo\n                  }\n                  alt=\"Selected img\"\n                  className={scss.editPhotoBlock}\n                />\n              </div>\n              <input\n                onChange={e => {\n                  setFieldValue('photo', e.target.files[0]);\n                }}\n                className={scss.fileField}\n                type=\"file\"\n                name=\"photo\"\n                disabled={!mode}\n              />\n              <div className={scss.confirmPhoto}>\n                {mode &&\n                  (typeof values.photo === 'string' ? (\n                    <div className={scss.editPhotoLabel}>\n                      <svg className={scss.editPhoto}>\n                        <use href={`${defualtPhoto}#icon-camera`}></use>\n                      </svg>\n                      <span>Edit photo</span>\n                    </div>\n                  ) : (\n                    ''\n                  ))}\n              </div>\n            </label>\n          </div>\n          {mode && typeof values.photo !== 'string' && !values.confirm && (\n            <div className={`${scss.editPhotoLabel} ${scss.confirmPhoto2}`}>\n              <button\n                type=\"button\"\n                onClick={() => setFieldValue('confirm', true)}\n              >\n                <svg className={scss.editPhoto}>\n                  <use href={`${defualtPhoto}#icon-check`}></use>\n                </svg>\n              </button>\n\n              <span>Confirm</span>\n              <button\n                id=\"cansel\"\n                type=\"button\"\n                onClick={() => {\n                  // setFieldValue('confirm', false);\n                  // setFieldTouched('photo', false);\n                  setFieldValue('photo', user.user.avatarURL);\n                }}\n              >\n                <svg className={scss.editPhoto}>\n                  <use href={`${defualtPhoto}#icon-cross-small`}></use>\n                </svg>\n              </button>\n            </div>\n          )}\n          <div className={scss.userFields}>\n            <label htmlFor=\"firstName\" className={scss.label}>\n              Name:\n              <Field name=\"firstName\" type=\"email\">\n                {({ meta, isValid, validate }) => (\n                  <>\n                    <CssTextField\n                      disabled={!mode}\n                      error={meta.error ? true : false}\n                      required\n                      className={scss.input}\n                      label={meta.error}\n                      value={values.firstName}\n                      onChange={e => {\n                        setFieldValue('firstName', e.target.value);\n                      }}\n                    />\n                  </>\n                )}\n              </Field>\n            </label>\n            <label htmlFor=\"email\" className={scss.label}>\n              Email:\n              <Field name=\"email\">\n                {({ meta, isValid }) => (\n                  <CssTextField\n                    error={meta.error ? true : false}\n                    disabled={!mode}\n                    required\n                    className={scss.input}\n                    label={meta.error}\n                    value={values.email}\n                    onChange={e => {\n                      setFieldValue('email', e.target.value);\n                    }}\n                  />\n                )}\n              </Field>\n            </label>\n            <label htmlFor=\"birthday\" className={scss.label}>\n              Birthday:\n              <Field name=\"birthday\">\n                {({ meta, isValid }) => (\n                  <CssTextField\n                    error={meta.error ? true : false}\n                    disabled={!mode}\n                    required\n                    className={scss.input}\n                    label={meta.error}\n                    value={values.birthday}\n                    sx={{\n                      '& .MuiInputLabel-root': {\n                        top: '-13px',\n                      },\n                    }}\n                    onChange={e => {\n                      setFieldValue('birthday', e.target.value);\n                    }}\n                  />\n                )}\n              </Field>\n            </label>\n            <label htmlFor=\"phone\" className={scss.label}>\n              Phone:\n              <Field name=\"phone\">\n                {({ meta, isValid }) => (\n                  <CssTextField\n                    error={meta.error ? true : false}\n                    disabled={!mode}\n                    className={scss.input}\n                    label={meta.error}\n                    value={values.phone}\n                    sx={{\n                      '& .MuiInputLabel-root': {\n                        top: '0px',\n                      },\n                    }}\n                    onChange={e => {\n                      setFieldValue('phone', e.target.value);\n                    }}\n                  />\n                )}\n              </Field>\n            </label>\n            <label htmlFor=\"city\" className={scss.label}>\n              City:\n              <Field name=\"city\">\n                {({ meta, isValid }) => (\n                  <CssTextField\n                    error={meta.error ? true : false}\n                    disabled={!mode}\n                    className={scss.input}\n                    label={meta.error}\n                    value={values.city}\n                    sx={{\n                      '& .MuiInputLabel-root': {\n                        top: '0px',\n                      },\n                    }}\n                    onChange={e => {\n                      setFieldValue('city', e.target.value);\n                    }}\n                  />\n                )}\n              </Field>\n            </label>\n          </div>\n\n          {mode && (\n            <button className={`${scss.button}`} type=\"submit\">\n              Save\n            </button>\n          )}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","export const emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\nexport const passwordRegexp =\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,16}$/;\nexport const birthdayRegexp =\n  /^(0[1-9]|1\\d|2[0-9]|3[01]).(0[1-9]|1[0-2]).\\d{4}$/;\nexport const PhoneReg = /^\\+380\\d{9}$/;\nexport const cityRegexp = /^[A-Z][A-Za-z\\-]+$/;\nexport const defaultAvatar =\n  'https://res.cloudinary.com/dkmmhjqew/image/upload/v1696086608/default-avatar/Photo_default_ndssoh.png';\n","import scss from './personal.module.scss';\nimport defualtPhoto from '../../images/icons.svg';\nimport { PersonalForm } from './Form';\nimport { useState } from 'react';\nimport { logOut } from 'redux/auth/authOperations';\nimport Logout from 'components/Logout/Logout';\n\nimport {\n  closeModalApproveAction,\n  openModalApproveAction,\n} from 'redux/global/globalSlice';\n// import { isModalApproveActionOpen } from 'redux/global/globalSelectors';\nimport { selectIsModalApproveActionOpen } from 'redux/global/globalSelectors';\nimport ModalApproveAction from 'components/ModalApproveAction/ModalApproveAction';\nimport { Modal } from 'components/Modal/Modal';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const Card = () => {\n  const [editMode, SetEditMode] = useState(false);\n\n  const dispatch = useDispatch(logOut);\n  const handleLogOut = () => {\n    dispatch(logOut());\n  };\n\n  const edit = () => SetEditMode(!editMode);\n\n  return (\n    <div>\n      <h2>My information:</h2>\n      <div className={scss.card}>\n        <PersonalForm mode={editMode} handleEdit={edit} />\n        {!editMode && (\n          // <button\n          //   type=\"button\"\n          //   onClick={handleLogOut}\n          //   className={scss.logoutblock}\n          // >\n          //   <svg className={scss.logout}>\n          //     <use href={`${defualtPhoto}#icon-logout`}></use>\n          //   </svg>\n          //   <span>Log Out</span>\n          // </button>\n          <Logout text={'Logout'} classes={'cartLogout'} />\n        )}\n      </div>\n      {/* {selectIsModalApproveActionOpen && (\n        <Modal closeReducer={closeModalApproveAction}>\n          <ModalApproveAction />\n        </Modal>\n      )} */}\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport scss from './personal.module.scss';\nimport AddButton from 'UI/Button/AddButton/AddButton';\nimport { selectUser } from 'redux/auth/authSelectors';\nimport defualtPhoto from '../../images/icons.svg';\nimport { useDeletePetMutation } from 'redux/notices/noticeQueryOperation';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { refreshUser } from 'redux/auth/authOperations';\nimport spyNoPets from 'images/spy/hellofromteam2.webp';\n\nexport const Pets = () => {\n  const user = useSelector(selectUser);\n  const [deletePets] = useDeletePetMutation();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(refreshUser());\n    console.log(123);\n  }, [dispatch]);\n  return (\n    <div className={scss.petsContainer}>\n      <div className={scss.myPets}>\n        <h2>My pets:</h2>\n        <AddButton />\n      </div>\n      <div className={scss.petsCard}>\n        <ul className={scss.petsCardList}>\n          {user?.user.pets.map((pet, index) => {\n            return (\n              <li key={index} className={scss.petsListItem}>\n                <button\n                  type=\"button\"\n                  className={scss.petsDelBtn}\n                  onClick={() => deletePets(pet._id)}\n                >\n                  <svg className={scss.petsDelBtnSVG}>\n                    <use href={`${defualtPhoto}#icon-trash-2`}></use>\n                  </svg>\n                </button>\n\n                <img src={pet.petURL} className={scss.petsImg} />\n                <div className={scss.petsInfoBlock}>\n                  <div className={scss.petsInfo}>\n                    <h3>Name:</h3>\n                    <div>{pet.name}</div>\n                  </div>\n                  <div className={scss.petsInfo}>\n                    <h3>Date of birth:</h3>\n                    <div>{pet.dateOfBirth}</div>\n                  </div>\n                  <div className={scss.petsInfo}>\n                    <h3>Type:</h3>\n                    <div>{pet.type}</div>\n                  </div>\n                  <div className={scss.petsInfo}>\n                    <h3>Comments:</h3>\n                    <div>{pet.comments}</div>\n                  </div>\n                </div>\n              </li>\n            );\n          })}\n          {user && (\n            <div className={scss.spyIMG}>\n              <img src={spyNoPets}></img>\n              <p>\n                You have not added your pets, if you want to add them, click on\n                the button \"Add pet\"\n              </p>\n            </div>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import scss from '../modules/shared/styles/PersonalPage/Personal.module.scss';\nimport { Card } from '../components/Personal/PersonalCard';\nimport { Pets } from '../components/Personal/PetsCards';\n\nconst Profile = () => {\n  return (\n    <>\n      <section className={`container ${scss.section}`}>\n        <Card />\n        <Pets />\n      </section>\n    </>\n  );\n};\n\nexport default Profile;\n"],"names":["_ref","clickFunc","isMobile","useMedia","screen","breakpoints","mobile","media","_jsx","_Fragment","children","_jsxs","onClick","className","styles","href","sprite","CssTextField","styled","TextField","borderRadius","borderColor","padding","fontSize","top","validationSchema","Yup","shape","photo","required","firstName","min","email","matches","birthday","phone","optional","city","PersonalForm","mode","handleEdit","user","useSelector","selectUser","dispatch","useDispatch","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref2","setSubmitting","wrap","_context","prev","next","userUpdate","refreshUser","t0","finish","stop","_x","_x2","apply","arguments","Formik","initialValues","avatarURL","name","confirm","onSubmit","_ref4","setFieldValue","handleChange","formikProps","handleReset","setFieldTouched","Form","scss","id","type","concat","defualtPhoto","clsx","src","URL","createObjectURL","alt","onChange","e","target","files","disabled","htmlFor","Field","_ref5","meta","isValid","validate","error","label","value","_ref6","_ref7","sx","_ref8","_ref9","Card","_useState","useState","_useState2","_slicedToArray","editMode","SetEditMode","logOut","Logout","text","classes","Pets","_useDeletePetMutation","useDeletePetMutation","deletePets","useEffect","console","log","AddButton","pets","map","pet","index","_id","petURL","dateOfBirth","comments","spyNoPets","section"],"sourceRoot":""}