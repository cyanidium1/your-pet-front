{"version":3,"file":"static/js/346.d9570495.chunk.js","mappings":"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","sources":["webpack://your-pet-front/./src/pages/OurFriendsPage/OurFriendsPage.module.css?86ce","webpack://your-pet-front/./src/components/FriendsItem/FriendItem.module.css?0f08","webpack://your-pet-front/./src/components/TimePicker/TimePicker.module.css?ffc5","components/TimePicker/TimePicker.jsx","components/FriendsItem/FriendItem.jsx","redux/friends/friendSelector.js","webpack://your-pet-front/./src/components/FriendList/FriendList.module.css?6537","components/FriendList/FriendList.jsx","pages/OurFriendsPage/OurFriendsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"OurFriendsPage_title__9QCXb\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"FriendItem_item__raSfx\",\"descrWrap\":\"FriendItem_descrWrap__Lh0kp\",\"itemWrap\":\"FriendItem_itemWrap__yhLUF\",\"title\":\"FriendItem_title__0L4VO\",\"subtitle\":\"FriendItem_subtitle__IODik\",\"value\":\"FriendItem_value__FzUQR\",\"truncate\":\"FriendItem_truncate__4bWFS\",\"imgWrap\":\"FriendItem_imgWrap__0oDQR\",\"img\":\"FriendItem_img__UhlLE\"};","// extracted by mini-css-extract-plugin\nexport default {\"currentDay\":\"TimePicker_currentDay__qPdmO\",\"time\":\"TimePicker_time__Rs7F3\",\"timePicker\":\"TimePicker_timePicker__uTyxV\",\"menu\":\"TimePicker_menu__OrXPZ\",\"dayOfWeek\":\"TimePicker_dayOfWeek__Y1vlX\"};","import React, { useState } from 'react';\n\nimport css from './TimePicker.module.css';\n\nconst TimePicker = ({ timeOptions, menuZIndex }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const weekDays = ['MN', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];\n\n  const day = new Date();\n  const dayOfWeek = day.getDay();\n\n  const currentDayWorkHours = () => {\n    if (timeOptions && timeOptions.length > 0) {\n      if (timeOptions[dayOfWeek]?.isOpen) {\n        return `${timeOptions[dayOfWeek].from} - ${timeOptions[dayOfWeek].to}`;\n      } else {\n        return 'CLOSED';\n      }\n    }\n    return 'Day - Night';\n  };\n\n  if (!timeOptions || timeOptions.length === 0) {\n    return <div className={css.closed}>Day - Night</div>;\n  }\n\n  return (\n    <div className={css.timePicker}>\n      <div className={css.time} onClick={handleToggle}>\n        {currentDayWorkHours()}\n      </div>\n      {isOpen && (\n        <ul className={css.menu} style={{ zIndex: menuZIndex }}>\n          {timeOptions.map((option, index) => (\n            <li\n              className={index === dayOfWeek - 1 ? css.currentDay : ''}\n              key={index}\n            >\n              <div className={css.dayOfWeek}>{weekDays[index]} </div>\n              <div className={css.workTime}>\n                {option.isOpen ? `${option.from} - ${option.to}` : 'CLOSED'}\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default TimePicker;\n","import React, { useState } from 'react';\nimport css from './FriendItem.module.css';\nimport TimePicker from 'components/TimePicker/TimePicker';\n\nconst FriendItem = ({\n  _id,\n  title,\n  address,\n  addressUrl,\n  imageUrl,\n  phone,\n  email,\n  workDays,\n}) => {\n  const [isTruncated, setIsTruncated] = useState(true);\n\n  return (\n    <li className={css.item} key={_id}>\n      <h3 className={css.title}>{title}</h3>\n      <div className={css.itemWrap}>\n        <div className={css.imgWrap}>\n          <img className={css.img} src={imageUrl} alt={title} />\n        </div>\n\n        <div className={css.descrWrap}>\n          <p className={css.subtitle}>Time:</p>\n          <TimePicker\n            className={css.timePicker}\n            timeOptions={workDays}\n            menuZIndex={100}\n          />\n          <p className={css.subtitle}>Address:</p>\n          <a\n            className={isTruncated ? css.truncate : css.value}\n            href={addressUrl ? addressUrl : 'website only'}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {address ? address : 'website only'}\n          </a>\n\n          <p className={css.subtitle}>Phone:</p>\n          <a className={css.value} href={`tel:${phone ? phone : 'email only'}`}>\n            {phone ? phone : 'email only'}\n          </a>\n          <p className={css.subtitle}>Email:</p>\n          <a\n            className={css.value}\n            href={`mailto:${email ? email : 'phone only'}`}\n          >\n            {email ? email : 'phone only'}\n          </a>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default FriendItem;\n","export const friendSelector = state => state.friend.items.friends;\n","// extracted by mini-css-extract-plugin\nexport default {\"cardList\":\"FriendList_cardList__ng23N\",\"friendWrap\":\"FriendList_friendWrap__pN6cr\"};","import FriendItem from 'components/FriendsItem/FriendItem';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { friendSelector } from 'redux/friends/friendSelector';\nimport css from './FriendList.module.css';\n\nconst FriendList = () => {\n  const ourFriends = useSelector(friendSelector);\n  console.log(ourFriends);\n  return (\n    <div className={css.friendWrap}>\n      <ul className={css.cardList}>\n        {ourFriends?.map(\n          ({\n            _id,\n            title,\n            address,\n            addressUrl,\n            imageUrl,\n            phone,\n            email,\n            workDays,\n          }) => (\n            <FriendItem\n              key={_id}\n              id={_id}\n              title={title}\n              address={address}\n              addressUrl={addressUrl}\n              imageUrl={imageUrl}\n              phone={phone}\n              email={email}\n              workDays={workDays}\n            />\n          )\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default FriendList;\n","import { useDispatch } from 'react-redux';\n\nimport React, { useEffect } from 'react';\nimport { fetchFriends } from 'redux/friends/friendOperation';\nimport css from './OurFriendsPage.module.css';\nimport FriendList from 'components/FriendList/FriendList';\n\nconst OurFriendsPage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchFriends());\n  }, [dispatch]);\n  return (\n    <>\n      <h3 className={css.title}>Our friends</h3>\n      <FriendList />\n    </>\n  );\n};\n\nexport default OurFriendsPage;\n"],"names":["_ref","timeOptions","menuZIndex","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","weekDays","dayOfWeek","Date","getDay","length","_jsxs","className","css","timePicker","children","_jsx","time","onClick","_timeOptions$dayOfWee","concat","from","to","currentDayWorkHours","menu","style","zIndex","map","option","index","currentDay","workTime","closed","_id","title","address","addressUrl","imageUrl","phone","email","workDays","isTruncated","item","itemWrap","imgWrap","img","src","alt","descrWrap","subtitle","TimePicker","truncate","value","href","target","rel","friendSelector","state","friend","items","friends","ourFriends","useSelector","console","log","FriendItem","id","dispatch","useDispatch","useEffect","fetchFriends","_Fragment","FriendList"],"sourceRoot":""}